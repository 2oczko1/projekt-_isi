@startuml
' Definicja diagramu klas dla systemu zarządzania apteką - wszystkie klasy projektu

skinparam classAttributeIconSize 0

' Klasy modelu
class Admin {
  -id: Long
  -username: String
  -password: String
  +manageSystem(): void
}

class Analytics {
  -analyticsId: Long
  -reportDate: LocalDateTime
  -salesData: Map<String, BigDecimal>
  +generateReport(): String
}

class AppUser {
  -id: Long
  -username: String
  -password: String
  -email: String
  -role: String
  +getDetails(): String
}

class Cart {
  -cartId: Long
  -customer: Customer
  -items: List<CartItem>
  +addItem(medicine: Medicine, quantity: int): void
  +removeItem(medicine: Medicine): void
}

class CartItem {
  -cartItemId: Long
  -cart: Cart
  -medicine: Medicine
  -quantity: int
  +updateQuantity(quantity: int): void
}

class Complaint {
  -complaintId: Long
  -customer: Customer
  -description: String
  -status: String
  -submissionDate: LocalDateTime
  +resolve(): void
}

class ComplianceAudit {
  -auditId: Long
  -auditDate: LocalDateTime
  -result: String
  +conductAudit(): void
}

class ComplianceReport {
  -reportId: Long
  -audit: ComplianceAudit
  -details: String
  +generatePDF(): byte[]
}

class Customer {
  -customerId: Long
  -firstName: String
  -lastName: String
  -address: String
  -phone: String
  +placeOrder(): void
}

class CustomerCard {
  -cardId: Long
  -customer: Customer
  -cardNumber: String
  -points: int
  +addPoints(points: int): void
}

class CustomerRegistration {
  -registrationId: Long
  -customer: Customer
  -registrationDate: LocalDateTime
  +completeRegistration(): void
}

class Delivery {
  -deliveryId: Long
  -order: Order
  -deliveryDate: LocalDateTime
  -status: String
  +updateStatus(status: String): void
}

class Discount {
  -discountId: Long
  -medicine: Medicine
  -percentage: double
  -startDate: LocalDateTime
  -endDate: LocalDateTime
  +applyDiscount(): BigDecimal
}

class DrugComplaint {
  -complaintId: Long
  -medicine: Medicine
  -customer: Customer
  -issue: String
  +investigate(): void
}

class EPrescription {
  -prescriptionId: Long
  -customer: Customer
  -code: String
  -issueDate: LocalDateTime
  -expiryDate: LocalDateTime
  +validate(): boolean
}

class Feedback {
  -feedbackId: Long
  -customer: Customer
  -rating: int
  -comment: String
  +submit(): void
}

class InventoryAlert {
  -alertId: Long
  -medicine: Medicine
  -threshold: int
  -currentStock: int
  +notifyManager(): void
}

class InventoryCheck {
  -checkId: Long
  -medicine: Medicine
  -checkedDate: LocalDateTime
  -quantityFound: int
  +updateStock(): void
}

class Invoice {
  -invoiceId: Long
  -order: Order
  -issueDate: LocalDateTime
  -totalAmount: BigDecimal
  +generatePDF(): byte[]
}

class LocalDateTimeConverter {
  +convertToDatabaseColumn(attribute: LocalDateTime): Timestamp
  +convertToEntityAttribute(dbData: Timestamp): LocalDateTime
}

class Manager {
  -managerId: Long
  -username: String
  -password: String
  +manageInventory(): void
}

class MarketingCampaign {
  -campaignId: Long
  -name: String
  -startDate: LocalDateTime
  -endDate: LocalDateTime
  -targetAudience: String
  +launch(): void
}

class Medicine {
  -medicineId: Long
  -name: String
  -description: String
  -price: BigDecimal
  -stockQuantity: int
  +checkAvailability(): boolean
}

class Notification {
  -notificationId: Long
  -user: AppUser
  -message: String
  -sentDate: LocalDateTime
  -read: boolean
  +markAsRead(): void
}

class OnlineOrder {
  -onlineOrderId: Long
  -order: Order
  -trackingNumber: String
  +track(): String
}

class Order {
  -orderId: Long
  -customer: Customer
  -orderDate: LocalDateTime
  -status: OrderStatus
  -totalAmount: BigDecimal
  +calculateTotal(): BigDecimal
}

class OrderItem {
  -orderItemId: Long
  -order: Order
  -medicine: Medicine
  -quantity: int
  -unitPrice: BigDecimal
  +getSubtotal(): BigDecimal
}

class OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

class Owner {
  -ownerId: Long
  -username: String
  -password: String
  +reviewReports(): void
}

class Payment {
  -paymentId: Long
  -order: Order
  -amount: BigDecimal
  -paymentDate: LocalDateTime
  -status: PaymentStatus
  +processPayment(): boolean
}

class PaymentIntent {
  -intentId: Long
  -payment: Payment
  -stripeId: String
  +confirm(): boolean
}

class PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}

class Pharmacist {
  -pharmacistId: Long
  -username: String
  -password: String
  +processPrescription(): void
}

class PrescriptionCheck {
  -checkId: Long
  -prescription: EPrescription
  -pharmacist: Pharmacist
  -result: String
  +verify(): boolean
}

class PriceChange {
  -changeId: Long
  -medicine: Medicine
  -oldPrice: BigDecimal
  -newPrice: BigDecimal
  -changeDate: LocalDateTime
  +apply(): void
}

class Promotion {
  -promotionId: Long
  -name: String
  -description: String
  -startDate: LocalDateTime
  -endDate: LocalDateTime
  +applyToOrder(order: Order): BigDecimal
}

class PromotionManagement {
  -managementId: Long
  -promotion: Promotion
  -status: String
  +activate(): void
}

class Reminder {
  -reminderId: Long
  -customer: Customer
  -medicine: Medicine
  -reminderDate: LocalDateTime
  +send(): void
}

class Report {
  -reportId: Long
  -type: String
  -generatedDate: LocalDateTime
  -data: Map<String, Object>
  +export(): byte[]
}

class ReportRequest {
  -requestId: Long
  -type: String
  -parameters: Map<String, String>
  +generateReport(): Report
}

class SalesData {
  -dataId: Long
  -date: LocalDateTime
  -amount: BigDecimal
  -medicine: Medicine
  +aggregate(): BigDecimal
}

class SalesReport {
  -reportId: Long
  -periodStart: LocalDateTime
  -periodEnd: LocalDateTime
  -totalSales: BigDecimal
  +summarize(): String
}

class StockCheck {
  -checkId: Long
  -medicine: Medicine
  -expectedQuantity: int
  -actualQuantity: int
  +discrepancy(): int
}

class Supplier {
  -supplierId: Long
  -name: String
  -contact: String
  +supplyMedicine(): void
}

class Wholesaler {
  -wholesalerId: Long
  -name: String
  -region: String
  +distribute(): void
}

' Klasy DTO
class OrderDto {
  -orderId: Long
  -customerId: Long
  -orderDate: LocalDateTime
  -items: List<OrderItemDto>
  +toEntity(): Order
}

class OrderItemDto {
  -medicineId: Long
  -quantity: int
  -unitPrice: BigDecimal
  +toEntity(): OrderItem
}

class PaymentRequest {
  -orderId: Long
  -amount: BigDecimal
  -paymentMethod: String
  +validate(): boolean
}

' Klasy wyjątków
class InsufficientStockException {
  -message: String
  +getMessage(): String
}

class PaymentProcessingException {
  -message: String
  +getMessage(): String
}

class ProductNotFoundException {
  -message: String
  +getMessage(): String
}

' Relacje między klasami (uproszczone dla czytelności)
AppUser "1" -- "0..*" Customer : has role
AppUser "1" -- "0..*" Admin : has role
AppUser "1" -- "0..*" Manager : has role
AppUser "1" -- "0..*" Owner : has role
AppUser "1" -- "0..*" Pharmacist : has role

Customer "1" -- "0..*" Order : places
Customer "1" -- "0..1" Cart : owns
Customer "1" -- "0..*" Complaint : submits
Customer "1" -- "0..1" CustomerCard : has
Customer "1" -- "0..*" Feedback : provides
Customer "1" -- "0..*" Reminder : receives
Customer "1" -- "0..*" EPrescription : owns

Cart "1" -- "0..*" CartItem : contains
CartItem "1" -- "1" Medicine : references

Order "1" -- "1..*" OrderItem : contains
Order "1" -- "0..1" Payment : has
Order "1" -- "0..1" Delivery : has
Order "1" -- "0..1" Invoice : has
Order "1" -- "0..1" OnlineOrder : is
Order "1" -- "1" OrderStatus : has status
OrderItem "1" -- "1" Medicine : references

Payment "1" -- "0..1" PaymentIntent : has
Payment "1" -- "1" PaymentStatus : has status

Medicine "1" -- "0..*" InventoryAlert : triggers
Medicine "1" -- "0..*" InventoryCheck : is checked
Medicine "1" -- "0..*" Discount : has
Medicine "1" -- "0..*" PriceChange : has
Medicine "1" -- "0..*" DrugComplaint : is subject of
Medicine "1" -- "0..*" StockCheck : is checked
Medicine "1" -- "0..1" Supplier : supplied by
Medicine "1" -- "0..1" Wholesaler : distributed by
Medicine "1" -- "0..*" Promotion : included in

Promotion "1" -- "0..1" PromotionManagement : managed by
Promotion "1" -- "0..1" MarketingCampaign : part of

Report "1" -- "0..1" ReportRequest : based on
Report "1" -- "0..1" SalesReport : is
SalesReport "1" -- "0..*" SalesData : contains
SalesData "1" -- "1" Medicine : for

EPrescription "1" -- "0..1" PrescriptionCheck : verified by
PrescriptionCheck "1" -- "1" Pharmacist : performed by

Notification "1" -- "1" AppUser : sent to

Analytics "1" -- "0..*" SalesData : analyzes

ComplianceReport "1" -- "1" ComplianceAudit : based on

' Uwaga: Diagram zawiera wiele klas i relacji, co może sprawić, że będzie bardzo złożony.
' W razie potrzeby można podzielić na mniejsze diagramy tematyczne.

@enduml
